.Drawer__SocialLinks {
  margin-top: 50px;
  display: flex;
  width: 100%;
  padding-left: 40px;
}

.Drawer {
  height: 100vh;
  position: fixed;
  top: 64px;
  right: -250px;
  background: var(--drawer-bg);
  width: 250px;
  transition: all ease 0.3s;
  z-index: 101;
  color: white;
  overflow-y: scroll;
  border-left: 1px solid var(--header-divider);
}
.Drawer a {
  color: var(--text-color);
}

.Drawer--open {
  transform: translateX(-250px);
}

.Drawer--open .DrawerLink {
  transform: translateX(0px);
}

.Drawer__links {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
}

.DrawerLink {
  height: 100%;

  text-decoration: none;

  font-size: 20px;
  font-family: "Lato", sans-serif;
  padding-left: 40px;

  font-weight: 500;
  transition: all ease 0.4s;
  transform: translateX(250px);
  padding-top: 12px;
  padding-bottom: 12px;
}

.DrawerLink:nth-child(2) {
  transition: all ease 0.6s;
}

.DrawerLink:nth-child(3) {
  transition: all ease 0.7s;
}
.DrawerLink:nth-child(4) {
  transition: all ease 0.8s;
}

.DrawerLink:hover {
  background: var(--header-hover);
}

@media (min-width: 767px) {
  .Drawer--open {
    transform: translateX(0px);
  }
}

@media (max-width: 300px) {
  .Drawer {
    width: 100%;
  }
}

.hamburger {
  --hamburger-padding-x: 10px;
  --hamburger-padding-y: 10px;
  --hamburger-active-layer-color: var(--text-color);
  --hamburger-layer-width: 25px;
  --hamburger-layer-height: 3px;
  --hamburger-layer-spacing: 4px;
  --hamburger-layer-color: var(--text-color);
  --hamburger-layer-border-radius: 4px;
  padding: var(--hamburger-padding-y) var(--hamburger-padding-x);

  display: none;
  cursor: pointer;

  color: var(--text-color);
  transition-property: opacity, filter;
  transition-duration: 0.25s;
  transition-timing-function: linear;

  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
  outline: none;
}

@media (max-width: 767px) {
  .hamburger {
    display: inline-block;
    margin-left: 20px;
  }
}
@media (max-width: 500px) {
  .hamburger {
    margin-left: 0px;
  }
}

.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  background-color: var(--hamburger-active-layer-color);
}

.hamburger-box {
  width: var(--hamburger-layer-width);
  height: calc(
    var(--hamburger-layer-height) * 3 + var(--hamburger-layer-spacing) * 2
  );
  padding-top: 3px;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: calc(var(--hamburger-layer-height) / -2 + 10);
}
.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after {
  content: "";
  display: block;
  width: var(--hamburger-layer-width);
  height: var(--hamburger-layer-height);
  background-color: var(--hamburger-layer-color);
  border-radius: var(--hamburger-layer-border-radius);
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}

.hamburger-inner::before {
  top: calc(
    (var(--hamburger-layer-spacing) + var(--hamburger-layer-height)) * -1
  );
}

.hamburger-inner::after {
  bottom: calc(
    (var(--hamburger-layer-spacing) + var(--hamburger-layer-height)) * -1
  );
}

.hamburger-inner {
  top: (var(--hamburger-layer-height) / 2);
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}
.hamburger-inner::before {
  top: calc(var(--hamburger-layer-height) + var(--hamburger-layer-spacing));
  transition: opacity 0.125s 0.275s ease;
}

.hamburger-inner::after {
  top: calc(
    (var(--hamburger-layer-height) * 2) + (var(--hamburger-layer-spacing) * 2)
  );
  transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburger--elastic.is-active .hamburger-inner {
  --y-offset: calc(
    var(--hamburger-layer-spacing) + var(--hamburger-layer-height)
  );

  transform: translate3d(0, var(--y-offset), 0) rotate(135deg);
  transition-delay: 0.075s;
}

.hamburger--elastic.is-active .hamburger-inner::before {
  transition-delay: 0s;
  opacity: 0;
}

.hamburger--elastic.is-active .hamburger-inner::after {
  --y-offset: calc(
    var(--hamburger-layer-spacing) + var(--hamburger-layer-height)
  );
  transform: translate3d(0, calc(var(--y-offset) * -2), 0) rotate(-270deg);
  transition-delay: 0.075s;
}
